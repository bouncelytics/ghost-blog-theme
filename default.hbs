<!DOCTYPE html>
<html>
<head>
    {{! Document Settings }}
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    {{! Page Meta }}
    <title>{{meta_title}}</title>
    <meta name="description" content="{{meta_description}}" />

    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="shortcut icon" type="image/png" href="https://blipmetrics.com/favicon-32x32.png">

    {{! Styles'n'Scripts }}
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,700' rel='stylesheet' type='text/css'>
    <link href="{{asset "css/ghost.css" }}" media="all" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="{{asset "css/screen.css"}}" />
    <link rel="stylesheet" type="text/css" href="{{asset "css/ba.css"}}" />

    <meta property="twitter:site" content="@blipmetrics">
    <meta property="twitter:domain" content="Blipmetrics.com" />
    <meta property="og:site_name" content="Blipmetrics Blog" />

    {{ghost_head}}
</head>
<body class="{{body_class}}">
    <div id="fb-root"></div>
    <header id="global-header" class="global-header navbar">
       <nav role="navigation">
           <div class="wrapper">
               <a  href="https://blipmetrics.com/"><img src="{{ asset "images/logo-dark.png" }}" class="ba-logo"></a>
               <button type="button" class="mobile-menu" data-toggle="collapse" data-target=".nav-collapse">
               <span class="hidden">Menu</span>
               </button>
               <ul id="main-menu" class="navbar-collapse collapse">
                   <li><a href="https://blipmetrics.com/pricing">Pricing</a></li>
                   <li><a href="https://blipmetrics/features">Features</a></li>
                    <li><a href="https://blog.blipmetrics.com">Blog</a></li>
                   <li><a class="signup" href="https://app.blipmetrics.com/register">Sign Up</a></li>
                   <li><a class="login" href="https://app.blipmetrics.com/login">Log in</a></li>
               </ul>
           </div>
        </nav>
    </header>

    <main class="blog-wrapper" role="main">
        <div class="page-wrapper">
            {{{body}}}
            <div class="clearfix"></div>
        </div>
    </main>

    <div class="modal fade" id="blogsubscribe" tabindex="-1" role="dialog" aria-labelledby="Email subscription modal" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <header class="modal-header">
                    <h4 class="modal-title">The latest content, once per month.</h4>
                    <a class="modal-close" data-dismiss="modal" aria-hidden="true" href="#"><span class="hidden">Close</span></a>
                </header>
                <div class="modal-body">
                <!-- Begin MailChimp Signup Form -->
                    <div id="mc_embed_signup">
                    <form action="//blipmetrics.us13.list-manage.com/subscribe/post?u=5c12a7f1671297121e8855e82&amp;id=95d2301986" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
                        <div id="mc_embed_signup_scroll">
                    <div class="mc-field-group">
                        <input type="text" placeholder="First Name" value="" name="FNAME" class="" id="mce-FNAME">
                        <input  type="email" placeholder="Email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
                    </div>

                        <div id="mce-responses" class="clear">
                            <div class="response" id="mce-error-response" style="display:none"></div>
                            <div class="response" id="mce-success-response" style="display:none"></div>
                        </div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                        <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_31ec2e36dafb31079d54c3e0b_97896342c8" tabindex="-1" value=""></div>
                        <div class="clear"> <button class="button-add wide" type="submit">Send me the good stuff</button></div>
                        <p><strong>Privacy policy:</strong> No spam. Unsubscribe any time.</p>
                        </div>
                    </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>

<footer class="footer">
    <div class="container">
        <div class="grid  grid--center">
            <div class="grid__item one-fifth">
                <p class="footer__heading">Product</p>

                <ul class="nav  nav--stacked  footer__nav">
                    <li><a href="https://blipmetrics.com/pricing">Pricing</a></li>
                    <li><a href="https://blipmetrics.com/features">Features</a></li>
                    <li><a href="https://blog.blipmetrics.com">Blog</a></li>
                    <li><a href="mailto:hello@blipmetrics.com">Contact Us</a></li>
                </ul>
            </div><div class="grid__item one-fifth">
                <p class="footer__heading">Connect</p>

                <ul class="nav  nav--stacked  footer__nav">
                    <li><a href="https://facebook.com/blipmetrics">Facebook</a></li>
                    <li><a href="https://twitter.com/blipmetrics">Twitter</a></li>
                    <li><a href="https://github.com/blipmetrics">Github</a></li>
                </ul>
            </div><div class="grid__item one-fifth">
                <img src="{{ asset "images/logo-bottom.png" }}" width="113px" alt="">
                <p class="copyright">Copyright Â© 2016 Blipmetrics. </p>
            </div>
        </div>
    </div>
</footer>

    <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
    {{ghost_foot}}

    <script>
    + function($) {
    "use strict";
    var backdrop = '.dropdown-backdrop'
    var toggle = '[data-toggle=dropdown]'
    var Dropdown = function(element) {
        var $el = $(element).on('click.bs.dropdown', this.toggle) }
    Dropdown.prototype.toggle = function(e) {
        var $this = $(this)
        if ($this.is('.disabled, :disabled')) return
        var $parent = getParent($this)
        var isActive = $parent.hasClass('open')
        clearMenus()
        if (!isActive) {
            if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) { $('<div class="dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus) }
            $parent.trigger(e = $.Event('show.bs.dropdown'))
            if (e.isDefaultPrevented()) return
            $parent.toggleClass('open').trigger('shown.bs.dropdown')
            $this.focus()
        }
        return false
    }
    Dropdown.prototype.keydown = function(e) {
        if (!/(38|40|27)/.test(e.keyCode)) return
        var $this = $(this)
        e.preventDefault()
        e.stopPropagation()
        if ($this.is('.disabled, :disabled')) return
        var $parent = getParent($this)
        var isActive = $parent.hasClass('open')
        if (!isActive || (isActive && e.keyCode == 27)) {
            if (e.which == 27) $parent.find(toggle).focus()
            return $this.click()
        }
        var $items = $('[role=menu] li:not(.divider):visible a', $parent)
        if (!$items.length) return
        var index = $items.index($items.filter(':focus'))
        if (e.keyCode == 38 && index > 0) index--
            if (e.keyCode == 40 && index < $items.length - 1) index++
                if (!~index) index = 0
        $items.eq(index).focus()
    }

    function clearMenus() {
        $(backdrop).remove()
        $(toggle).each(function(e) {
            var $parent = getParent($(this))
            if (!$parent.hasClass('open')) return
            $parent.trigger(e = $.Event('hide.bs.dropdown'))
            if (e.isDefaultPrevented()) return
            $parent.removeClass('open').trigger('hidden.bs.dropdown')
        })
    }

    function getParent($this) {
        var selector = $this.attr('data-target')
        if (!selector) {
            selector = $this.attr('href')
            selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '')
        }
        var $parent = selector && $(selector)
        return $parent && $parent.length ? $parent : $this.parent()
    }
    var old = $.fn.dropdown
    $.fn.dropdown = function(option) {
        return this.each(function() {
            var $this = $(this)
            var data = $this.data('dropdown')
            if (!data) $this.data('dropdown', (data = new Dropdown(this)))
            if (typeof option == 'string') data[option].call($this)
        })
    }
    $.fn.dropdown.Constructor = Dropdown
    $.fn.dropdown.noConflict = function() {
        $.fn.dropdown = old
        return this
    }
    $(document).on('click.bs.dropdown.data-api', clearMenus).on('click.bs.dropdown.data-api', '.dropdown form', function(e) { e.stopPropagation() }).on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.bs.dropdown.data-api', toggle + ', [role=menu]', Dropdown.prototype.keydown)
}(jQuery); + function($) {
    "use strict";
    var Modal = function(element, options) {
        this.options = options
        this.$element = $(element)
        this.$backdrop = this.isShown = null
        if (this.options.remote) this.$element.load(this.options.remote)
    }
    Modal.DEFAULTS = { backdrop: true, keyboard: true, show: true }
    Modal.prototype.toggle = function(_relatedTarget) {
        return this[!this.isShown ? 'show' : 'hide'](_relatedTarget) }
    Modal.prototype.show = function(_relatedTarget) {
        var that = this
        var e = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })
        this.$element.trigger(e)
        if (this.isShown || e.isDefaultPrevented()) return
        this.isShown = true
        this.escape()
        this.$element.on('click.dismiss.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))
        this.backdrop(function() {
            var transition = $.support.transition && that.$element.hasClass('fade')
            if (!that.$element.parent().length) { that.$element.appendTo(document.body) }
            that.$element.show()
            if (transition) { that.$element[0].offsetWidth }
            that.$element.addClass('in').attr('aria-hidden', false)
            that.enforceFocus()
            var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })
            transition ? that.$element.find('.modal-dialog').one($.support.transition.end, function() { that.$element.focus().trigger(e) }).emulateTransitionEnd(300) : that.$element.focus().trigger(e)
        })
    }
    Modal.prototype.hide = function(e) {
        if (e) e.preventDefault()
        e = $.Event('hide.bs.modal')
        this.$element.trigger(e)
        if (!this.isShown || e.isDefaultPrevented()) return
        this.isShown = false
        this.escape()
        $(document).off('focusin.bs.modal')
        this.$element.removeClass('in').attr('aria-hidden', true).off('click.dismiss.modal')
        $.support.transition && this.$element.hasClass('fade') ? this.$element.one($.support.transition.end, $.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal()
    }
    Modal.prototype.enforceFocus = function() { $(document).off('focusin.bs.modal').on('focusin.bs.modal', $.proxy(function(e) {
            if (this.$element[0] !== e.target && !this.$element.has(e.target).length) { this.$element.focus() } }, this)) }
    Modal.prototype.escape = function() {
        if (this.isShown && this.options.keyboard) { this.$element.on('keyup.dismiss.bs.modal', $.proxy(function(e) { e.which == 27 && this.hide() }, this)) } else if (!this.isShown) { this.$element.off('keyup.dismiss.bs.modal') } }
    Modal.prototype.hideModal = function() {
        var that = this
        this.$element.hide()
        this.backdrop(function() {
            that.removeBackdrop()
            that.$element.trigger('hidden.bs.modal')
        })
    }
    Modal.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove()
        this.$backdrop = null
    }
    Modal.prototype.backdrop = function(callback) {
        var that = this
        var animate = this.$element.hasClass('fade') ? 'fade' : ''
        if (this.isShown && this.options.backdrop) {
            var doAnimate = $.support.transition && animate
            this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />').appendTo(document.body)
            this.$element.on('click.dismiss.modal', $.proxy(function(e) {
                if (e.target !== e.currentTarget) return
                this.options.backdrop == 'static' ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this)
            }, this))
            if (doAnimate) this.$backdrop[0].offsetWidth
            this.$backdrop.addClass('in')
            if (!callback) return
            doAnimate ? this.$backdrop.one($.support.transition.end, callback).emulateTransitionEnd(150) : callback()
        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass('in')
            $.support.transition && this.$element.hasClass('fade') ? this.$backdrop.one($.support.transition.end, callback).emulateTransitionEnd(150) : callback()
        } else if (callback) { callback() }
    }
    var old = $.fn.modal
    $.fn.modal = function(option, _relatedTarget) {
        return this.each(function() {
            var $this = $(this)
            var data = $this.data('bs.modal')
            var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)
            if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
            if (typeof option == 'string') data[option](_relatedTarget)
            else if (options.show) data.show(_relatedTarget)
        })
    }
    $.fn.modal.Constructor = Modal
    $.fn.modal.noConflict = function() {
        $.fn.modal = old
        return this
    }
    $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function(e) {
        var $this = $(this)
        var href = $this.attr('href')
        var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, '')))
        var option = $target.data('modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())
        e.preventDefault()
        $target.modal(option, this).one('hide', function() { $this.is(':visible') && $this.focus() })
    })
    $(document).on('show.bs.modal', '.modal', function() { $(document.body).addClass('modal-open') }).on('hidden.bs.modal', '.modal', function() { $(document.body).removeClass('modal-open') })
}(jQuery); + function($) {
    "use strict";
    var Collapse = function(element, options) {
        this.$element = $(element)
        this.options = $.extend({}, Collapse.DEFAULTS, options)
        this.transitioning = null
        if (this.options.parent) this.$parent = $(this.options.parent)
        if (this.options.toggle) this.toggle()
    }
    Collapse.DEFAULTS = { toggle: true }
    Collapse.prototype.dimension = function() {
        var hasWidth = this.$element.hasClass('width')
        return hasWidth ? 'width' : 'height'
    }
    Collapse.prototype.show = function() {
        if (this.transitioning || this.$element.hasClass('in')) return
        var startEvent = $.Event('show.bs.collapse')
        this.$element.trigger(startEvent)
        if (startEvent.isDefaultPrevented()) return
        var actives = this.$parent && this.$parent.find('> .panel > .in')
        if (actives && actives.length) {
            var hasData = actives.data('bs.collapse')
            if (hasData && hasData.transitioning) return
            actives.collapse('hide')
            hasData || actives.data('bs.collapse', null)
        }
        var dimension = this.dimension()
        this.$element.removeClass('collapse').addClass('collapsing')[dimension](0)
        this.transitioning = 1
        var complete = function() {
            this.$element.removeClass('collapsing').addClass('in')[dimension]('auto')
            this.transitioning = 0
            this.$element.trigger('shown.bs.collapse')
        }
        if (!$.support.transition) return complete.call(this)
        var scrollSize = $.camelCase(['scroll', dimension].join('-'))
        this.$element.one($.support.transition.end, $.proxy(complete, this)).emulateTransitionEnd(350)[dimension](this.$element[0][scrollSize])
    }
    Collapse.prototype.hide = function() {
        if (this.transitioning || !this.$element.hasClass('in')) return
        var startEvent = $.Event('hide.bs.collapse')
        this.$element.trigger(startEvent)
        if (startEvent.isDefaultPrevented()) return
        var dimension = this.dimension()
        this.$element[dimension](this.$element[dimension]())[0].offsetHeight
        this.$element.addClass('collapsing').removeClass('collapse').removeClass('in')
        this.transitioning = 1
        var complete = function() {
            this.transitioning = 0
            this.$element.trigger('hidden.bs.collapse').removeClass('collapsing').addClass('collapse')
        }
        if (!$.support.transition) return complete.call(this)
        this.$element[dimension](0).one($.support.transition.end, $.proxy(complete, this)).emulateTransitionEnd(350)
    }
    Collapse.prototype.toggle = function() { this[this.$element.hasClass('in') ? 'hide' : 'show']() }
    var old = $.fn.collapse
    $.fn.collapse = function(option) {
        return this.each(function() {
            var $this = $(this)
            var data = $this.data('bs.collapse')
            var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)
            if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
            if (typeof option == 'string') data[option]()
        })
    }
    $.fn.collapse.Constructor = Collapse
    $.fn.collapse.noConflict = function() {
        $.fn.collapse = old
        return this
    }
    $(document).on('click', '[data-toggle=collapse]', function(e) {
        var $this = $(this),
            href
        if( $("#main-menu").hasClass('collapse') )
            $("#main-menu").addClass('collapsed').removeClass('collapse')
        else
            $("#main-menu").addClass('collapse').removeClass('collapsed')
    })
}(jQuery);
(function() {
        $(document).on('click', '#trigger-overlay', function() { $('#overlay').toggleClass('overlay-open'); });
    $(document).on('click', '#overlay-close', function() { $('#overlay').toggleClass('overlay-open'); });
    $(document).keyup(function(k) {
        if (k.keyCode == 27 && $('#overlay').hasClass('overlay-open')) { $('#overlay').toggleClass('overlay-open'); } }); })();
</script>
    <script type="text/javascript" src="{{asset "js/jquery.fitvids.js"}}"></script>
    <script type="text/javascript" src="{{asset "js/prism.js"}}"></script>
    <script type="text/javascript" src="{{asset "js/index.js"}}"></script>

</body>
</html>
